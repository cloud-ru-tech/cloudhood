import type { Plugin } from 'vite';

export const extensionReloadPlugin = (): Plugin => {
  let notifyClients: ((file?: string) => void) | null = null;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ WebSocket
  const sendReloadNotification = (file?: string) => {
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π WebSocket –±—Ä–∞—É–∑–µ—Ä–∞
      const WebSocket = globalThis.WebSocket || require('ws');
      const port = process.env.WS_PORT ? parseInt(process.env.WS_PORT, 10) : 3333;
      const ws = new WebSocket(`ws://localhost:${port}`);

      ws.onopen = () => {
        ws.send(JSON.stringify({ type: 'reload', file }));
        ws.close();
      };

      ws.onerror = () => {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∑–∞–ø—É—â–µ–Ω
      };
    } catch (_error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ - —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∑–∞–ø—É—â–µ–Ω
    }
  };

  return {
    name: 'extension-reload',

    buildStart() {
      if (process.env.NODE_ENV === 'development') {
        notifyClients = sendReloadNotification;
        // eslint-disable-next-line no-console
        console.log('üîÑ Extension reload plugin initialized');
      }
    },

    buildEnd() {
      // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–±–æ—Ä–∫–∏
      if (notifyClients && process.env.NODE_ENV === 'development') {
        setTimeout(() => {
          notifyClients?.();
          // eslint-disable-next-line no-console
          console.log('üîÑ Extension build completed - reload signal sent');
        }, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–æ–≤
      }
    },

    handleHotUpdate({ file }) {
      if (notifyClients) {
        notifyClients(file);
      }
    },
  };
};
