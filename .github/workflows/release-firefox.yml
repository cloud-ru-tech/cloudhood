name: Release Firefox Extension

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Run unit tests
        run: pnpm test:unit
        shell: bash

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: reports/unit/
          retention-days: 5

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Build Chrome extension for testing
        run: pnpm run build:chromium
        shell: bash

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps
        shell: bash

      - name: Run e2e tests
        run: pnpm test:e2e:ci
        shell: bash

      - name: Archive e2e test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: test-results/
          retention-days: 5

  build-and-publish-firefox:
    needs: [unit-tests, e2e-tests]
    if: |
      github.ref == 'refs/heads/main' &&
      contains(fromJson('["Egorzaa", "JustPilz", "Kirrrusha"]'), github.actor)

    permissions:
      contents: write
      pull-requests: write
      statuses: write
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.set_latest_tag.outputs.latest_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{secrets.PAT}}

      - name: Automated version bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          major-wording: 'MAJOR,BREAKING CHANGE'
          minor-wording: 'add,new,feat'
          patch-wording: 'patch,fix,chore'
          skip-commit: 'true'
          skip-tag: 'true'
          version-type: ${{ github.event.inputs.version_type }}

      - name: Apply version bump
        id: set_latest_tag
        run: |
          VERSION=$(node --print 'require("./package.json").version')
          TAG=v$VERSION
          echo "latest_tag=$TAG" >> $GITHUB_OUTPUT

          # Update manifest file for Firefox
          jq --arg ver "$VERSION" '.version = $ver' manifest.firefox.json > tmp.json && mv tmp.json manifest.firefox.json

          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git fetch --tags
          git add manifest.firefox.json package.json pnpm-lock.yaml
          git commit -m "ci: bump version to $VERSION for Firefox [skip ci]"
          git push
          git tag $TAG
          git push origin tag $TAG

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Build Firefox extension
        env:
          FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
        run: pnpm run build:firefox
        shell: bash

      - name: Pack Firefox build folder to ZIP-file
        run: |
          cd build/firefox
          zip -r ../../cloudhood-firefox.zip .

      - name: Build Firefox sources ZIP-file
        run: pnpm run build:firefox-sources
        shell: bash

      - name: Upload Firefox build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudhood-firefox
          path: cloudhood-firefox.zip

      - name: Upload Firefox sources artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudhood-firefox-sources
          path: cloudhood-firefox-sources.zip

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set_latest_tag.outputs.latest_tag }}
          name: Firefox Release ${{ steps.set_latest_tag.outputs.latest_tag }}
          files: |
            cloudhood-firefox.zip
            cloudhood-firefox-sources.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Firefox Add-ons
        env:
          FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
          FIREFOX_JWT_ISSUER: ${{ secrets.FIREFOX_JWT_ISSUER }}
          FIREFOX_JWT_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}
        run: |
          echo "Debug: Checking Firefox files..."
          ls -la cloudhood-firefox*.zip || echo "Firefox files not found"

          echo "Debug: Firefox extension ID is set: ${{ secrets.FIREFOX_EXTENSION_ID != '' }}"

          npx publish-browser-extension \
            --firefox-zip cloudhood-firefox.zip \
            --firefox-sources-zip cloudhood-firefox-sources.zip \
            --firefox-extension-id ${{ env.FIREFOX_EXTENSION_ID }} \
            --firefox-jwt-issuer ${{ env.FIREFOX_JWT_ISSUER }} \
            --firefox-jwt-secret ${{ env.FIREFOX_JWT_SECRET }}
