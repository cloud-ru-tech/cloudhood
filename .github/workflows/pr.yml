name: PR

on:
  pull_request:

jobs:
  license:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: License validator
        uses: './.github/actions/license'

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ESLint
        uses: './.github/actions/eslint'

      - name: Stylelint
        uses: './.github/actions/stylelint'

  typescript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TypeScript
        uses: './.github/actions/typescript'

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Run unit tests
        run: pnpm test:unit
        shell: bash

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: reports/unit/
          retention-days: 5

  pr-build:
    needs: [license, lint, typescript, unit-tests]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      short_sha: ${{ steps.set_short_sha.outputs.short_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        shell: bash

      - name: Set SHORT_SHA
        id: set_short_sha
        run: |
          SHORT_SHA=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Build Chrome extension
        run: pnpm build:chromium
        shell: bash

      - name: Pack Chrome build folder to ZIP-file
        run: |
          cd build/chrome
          zip -r ../../cloudhood-chrome-${{ steps.set_short_sha.outputs.short_sha }}.zip .

      - name: Build Firefox extension
        run: pnpm build:firefox
        shell: bash

      - name: Pack Firefox build folder to ZIP-file
        run: |
          cd build/firefox
          zip -r ../../cloudhood-firefox-${{ steps.set_short_sha.outputs.short_sha }}.zip .

      - name: Build Firefox sources ZIP-file
        run: npm run build:firefox-sources
        shell: bash

      - name: Rename Firefox sources ZIP-file
        run: mv cloudhood-firefox-sources.zip cloudhood-firefox-sources-${{ steps.set_short_sha.outputs.short_sha }}.zip

      - name: Pull request artifacts
        uses: gavv/pull-request-artifacts@v1.1.0
        with:
          commit: ${{ steps.set_short_sha.outputs.short_sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          artifacts-branch: artifacts
          artifacts: |
            cloudhood-chrome-${{ steps.set_short_sha.outputs.short_sha }}.zip
            cloudhood-firefox-${{ steps.set_short_sha.outputs.short_sha }}.zip
            cloudhood-firefox-sources-${{ steps.set_short_sha.outputs.short_sha }}.zip

      - name: Upload Chrome build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudhood-chrome-${{ steps.set_short_sha.outputs.short_sha }}
          path: cloudhood-chrome-${{ steps.set_short_sha.outputs.short_sha }}.zip

      - name: Upload Firefox build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudhood-firefox-${{ steps.set_short_sha.outputs.short_sha }}
          path: cloudhood-firefox-${{ steps.set_short_sha.outputs.short_sha }}.zip

      - name: Upload Firefox sources artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudhood-firefox-sources-${{ steps.set_short_sha.outputs.short_sha }}
          path: cloudhood-firefox-sources-${{ steps.set_short_sha.outputs.short_sha }}.zip

  pre-publish:
    needs: [pr-build]
    runs-on: ubuntu-latest
    steps:
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install publish-browser-extension
        run: pnpm install -save-dev publish-browser-extension

      - name: Download Chrome build artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudhood-chrome-${{ needs.pr-build.outputs.short_sha }}
          path: dist/chrome

      - name: Download Firefox build artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudhood-firefox-${{ needs.pr-build.outputs.short_sha }}
          path: dist/firefox

      - name: Download Firefox sources artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudhood-firefox-sources-${{ needs.pr-build.outputs.short_sha }}
          path: dist/firefox-sources

      - name: Publish Chrome Extension (Dry Run)
        env:
          CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
          CHROME_PUBLISH_TARGET: ${{ secrets.CHROME_PUBLISH_TARGET }}
        run: |
          npx publish-extension \
            --dry-run \
            --chrome-zip dist/chrome/cloudhood-chrome-${{ needs.pr-build.outputs.short_sha }}.zip \
            --chrome-extension-id ${{ env.CHROME_EXTENSION_ID }} \
            --chrome-client-id ${{ env.CHROME_CLIENT_ID }} \
            --chrome-client-secret ${{ env.CHROME_CLIENT_SECRET }} \
            --chrome-refresh-token ${{ env.CHROME_REFRESH_TOKEN }} \
            --chrome-publish-target ${{ env.CHROME_PUBLISH_TARGET }}

      - name: Publish Firefox Extension (Dry Run)
        env:
          FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
          FIREFOX_JWT_ISSUER: ${{ secrets.FIREFOX_JWT_ISSUER }}
          FIREFOX_JWT_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}
        run: |
          npx publish-extension \
            --dry-run \
            --firefox-zip dist/firefox/cloudhood-firefox-${{ needs.pr-build.outputs.short_sha }}.zip \
            --firefox-sources-zip dist/firefox-sources/cloudhood-firefox-sources-${{ needs.pr-build.outputs.short_sha }}.zip \
            --firefox-extension-id ${{ env.FIREFOX_EXTENSION_ID }} \
            --firefox-jwt-issuer ${{ env.FIREFOX_JWT_ISSUER }} \
            --firefox-jwt-secret ${{ env.FIREFOX_JWT_SECRET }}
          npx publish-extension \
            --dry-run \
            --firefox-zip dist/firefox/cloudhood-firefox-${{ needs.pr-build.outputs.short_sha }}.zip \
            --firefox-sources-zip dist/firefox-sources/cloudhood-firefox-sources-${{ needs.pr-build.outputs.short_sha }}.zip \
            --firefox-extension-id ${{ env.FIREFOX_EXTENSION_ID }} \
            --firefox-jwt-issuer ${{ env.FIREFOX_JWT_ISSUER }} \
            --firefox-jwt-secret ${{ env.FIREFOX_JWT_SECRET }}
