name: Release

on:
  push:
    branches: main

jobs:
  license:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: License validator
        uses: './.github/actions/license'

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ESLint
        uses: './.github/actions/eslint'

  typescript:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: TypeScript
        uses: './.github/actions/typescript'

  build:
    needs: [license, lint, typescript]
    permissions:
      contents: write
      pull-requests: write
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{secrets.PAT}}

      - name: Automated version bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          major-wording: 'MAJOR,BREAKING CHANGE'
          minor-wording: 'add,new,feat'
          patch-wording: 'patch,fix,chore'
          skip-commit: 'true'
          skip-tag: 'true'

      - name: Apply version bump
        run: |
          VERSION=$(node --print 'require("./package.json").version')
          TAG=v$VERSION
          echo "LATEST_TAG=$TAG" >> $GITHUB_ENV
          jq --arg ver "$VERSION" '.version = $ver' manifest.json > tmp.json && mv tmp.json manifest.json
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git fetch --tags
          git add manifest.json package.json package-lock.json
          git commit -m "ci: bump version to $VERSION [skip ci]"
          git push
          git tag $TAG
          git push origin tag $TAG

      - name: Install dependencies
        run: npm ci
        shell: bash

      - name: Build React app
        run: npm run build

      - name: Pack build-folder to ZIP-file
        run: |
          cd build
          zip -r ../cloudhood.zip .

      - name: Publish
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          # title: Latest build
          # automatic_release_tag: 'latest'
          automatic_release_tag: ${{ env.LATEST_TAG }}
          files: |
            cloudhood.zip
