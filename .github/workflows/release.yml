name: Release

on:
  workflow_dispatch:

jobs:
  build:
    if: |
      github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
      statuses: write
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.set_latest_tag.outputs.latest_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{secrets.PAT}}

      - name: Automated version bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          major-wording: 'MAJOR,BREAKING CHANGE'
          minor-wording: 'add,new,feat'
          patch-wording: 'patch,fix,chore'
          skip-commit: 'true'
          skip-tag: 'true'

      - name: Apply version bump
        id: set_latest_tag
        run: |
          VERSION=$(node --print 'require("./package.json").version')
          TAG=v$VERSION
          echo "latest_tag=$TAG" >> $GITHUB_OUTPUT
          jq --arg ver "$VERSION" '.version = $ver' manifest.json > tmp.json && mv tmp.json manifest.json
          git config --local user.name github-actions
          git config --local user.email github-actions@github.com
          git fetch --tags
          git add manifest.json package.json package-lock.json
          git commit -m "ci: bump version to $VERSION [skip ci]"
          git push
          git tag $TAG
          git push origin tag $TAG

      - name: Install dependencies
        run: npm ci
        shell: bash

      - name: Build React app
        run: npm run build

      - name: Pack build-folder to ZIP-file
        run: |
          cd build
          zip -r ../cloudhood.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudhood
          path: cloudhood.zip

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install publish-browser-extension
        run: npm install -g publish-browser-extension

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudhood
          path: build

      - name: Upload CHROME
        env:
          CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
          CHROME_PUBLISH_TARGET: ${{ secrets.CHROME_PUBLISH_TARGET }}
        run: |
          npx publish-extension \
            --chrome-zip build/cloudhood.zip \
            --chrome-extension-id ${{ env.CHROME_EXTENSION_ID }} \
            --chrome-client-id ${{ env.CHROME_CLIENT_ID }} \
            --chrome-client-secret ${{ env.CHROME_CLIENT_SECRET }} \
            --chrome-refresh-token ${{ env.CHROME_REFRESH_TOKEN }} \
            --chrome-publish-target ${{ env.CHROME_PUBLISH_TARGET }}
